{
    "patches": [
        {
            "label": "2025-10-05_19-24-59",
            "content": "@@ -52,16 +52,29 @@\n e: str):\n+ # construtor\n %0A       \n@@ -98,16 +98,27 @@\n = color \n+# atributos\n %0A       \n@@ -174,123 +174,12 @@\n = 0%0A\n-%0A\n     \n-def __str__(self) -%3E str: %0A        return f%22Cor: %7Bself.color%7D, Tamanho: %7Bself.size%7D, Umidade: %7Bself.wetness%7D%22%0A\n %0A   \n@@ -550,16 +550,30 @@\n == %22P%22: \n+# early return\n %0A       \n@@ -710,73 +710,270 @@\n n 0 \n-%0A%0Adef main(): %0A    towel: Towel = Towel(%22%22, %22%22) %0A    while True: \n+# default return%0A%0A    def __str__(self) -%3E str: # toString%0A        return f%22Cor: %7Bself.color%7D, Tamanho: %7Bself.size%7D, Umidade: %7Bself.wetness%7D%22%0A%0Adef main(): %0A    towel: Towel = Towel(%22%22, %22%22) # 2: criar um obj com qq valor inicial%0A    while True: # 3: loop infinito\n %0A%0A  \n@@ -998,16 +998,41 @@\n input() \n+# 4: perguntar ao usuario\n %0A       \n@@ -1050,16 +1050,22 @@\n + line) \n+# echo\n %0A       \n@@ -1099,16 +1099,39 @@\n it(%22 %22) \n+# 5: separar argumentos\n %0A%0A      \n@@ -1204,16 +1204,28 @@\n criar%22: \n+# color size\n %0A       \n@@ -1637,11 +1637,95 @@\n el)%0A\n-%0Amain()\n+        else: # 7: erro%0A            print(%22fail: comando n%C3%A3o encontrado%22)%0A%0Amain() # passo 1\n",
            "lines": "57"
        },
        {
            "label": "2025-10-05_19-27-57",
            "content": "class Towel:\n    def __init__(self, color: str, size: str):\n        self.color: str = color \n        self.size: str = size\n        self.wetness: int = 0\n\n    def __str__(self) -> str: \n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.isMaxWetness():\n            self.wetness = self.isMaxWetness()\n            print(\"toalha encharcada\")\n\n    def isDry(self):\n        return self.wetness == 0\n\n    def wringOut(self):\n        self.wetness = 0\n\n    def isMaxWetness(self) -> int:\n        if self.size == \"P\": \n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0 \n\ndef main(): \n    towel: Towel = Towel(\"\", \"\") \n    while True: \n\n        line: str = input() \n        print(\"$\" + line) \n        args: list[str] = line.split(\" \") \n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"criar\": \n            color: str = args[1]\n            size: str = args[2]\n            towel = Towel(color, size)\n        elif args[0] == \"seca\":\n            print(\"sim\" if towel.isDry() else \"nao\")\n        elif args[0] == \"torcer\":\n            towel.wringOut()\n        elif args[0] == \"enxugar\":\n            amount: int = int(args[1])\n            towel.dry(amount)\n        elif args[0] == \"mostrar\":\n            print(towel)\n\nmain()",
            "lines": "55"
        }
    ]
}